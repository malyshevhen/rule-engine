version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: rule-engine-postgres
    environment:
      POSTGRES_DB: rule_engine
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rule_engine"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rule-engine-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nats:
    image: nats:2.10-alpine
    container_name: rule-engine-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js"]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    image: golang:1.24.7-alpine3.22
    container_name: rule-engine-app
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/rule_engine?sslmode=disable
      API_KEY: dev-api-key-12345
      JWT_SECRET: dev-jwt-secret-67890
      PORT: 8080
      NATS_URL: nats://nats:4222
      REDIS_URL: redis:6379
      ALERTING_ENABLED: "false"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: ["sh", "-c", "go mod download && go build -o rule-engine cmd/main.go && ./rule-engine migrate"]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: