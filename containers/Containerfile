# Build stage
FROM golang:1.24.7-alpine3.22 AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Create non-root user for build
RUN adduser -D -s /bin/sh -u 1001 appuser

WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimizations
RUN CGO_ENABLED=0 GOOS=linux go build \
        -a -installsuffix cgo \
        -ldflags="-w -s" \
        -o rule-engine \
        cmd/main.go

# Runtime stage
FROM alpine:3.22

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Create non-root user
RUN adduser -D -s /bin/sh -u 1001 appuser

WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/rule-engine .

# Change ownership to non-root user
RUN chown appuser:appuser rule-engine

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
        CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the application
CMD ["./rule-engine"]
