/*
Rule Engine API

A robust rule engine microservice for IoT automation. Allows users to create and manage custom automation rules with Lua script execution in a secure sandboxed environment.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ruleengine

import (
	"encoding/json"
)

// checks if the ApiActionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiActionDTO{}

// ApiActionDTO struct for ApiActionDTO
type ApiActionDTO struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	LuaScript *string `json:"lua_script,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewApiActionDTO instantiates a new ApiActionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiActionDTO() *ApiActionDTO {
	this := ApiActionDTO{}
	return &this
}

// NewApiActionDTOWithDefaults instantiates a new ApiActionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiActionDTOWithDefaults() *ApiActionDTO {
	this := ApiActionDTO{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApiActionDTO) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiActionDTO) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApiActionDTO) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ApiActionDTO) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiActionDTO) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiActionDTO) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiActionDTO) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiActionDTO) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiActionDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiActionDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiActionDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiActionDTO) SetId(v string) {
	o.Id = &v
}

// GetLuaScript returns the LuaScript field value if set, zero value otherwise.
func (o *ApiActionDTO) GetLuaScript() string {
	if o == nil || IsNil(o.LuaScript) {
		var ret string
		return ret
	}
	return *o.LuaScript
}

// GetLuaScriptOk returns a tuple with the LuaScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiActionDTO) GetLuaScriptOk() (*string, bool) {
	if o == nil || IsNil(o.LuaScript) {
		return nil, false
	}
	return o.LuaScript, true
}

// HasLuaScript returns a boolean if a field has been set.
func (o *ApiActionDTO) HasLuaScript() bool {
	if o != nil && !IsNil(o.LuaScript) {
		return true
	}

	return false
}

// SetLuaScript gets a reference to the given string and assigns it to the LuaScript field.
func (o *ApiActionDTO) SetLuaScript(v string) {
	o.LuaScript = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApiActionDTO) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiActionDTO) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApiActionDTO) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ApiActionDTO) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ApiActionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiActionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LuaScript) {
		toSerialize["lua_script"] = o.LuaScript
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableApiActionDTO struct {
	value *ApiActionDTO
	isSet bool
}

func (v NullableApiActionDTO) Get() *ApiActionDTO {
	return v.value
}

func (v *NullableApiActionDTO) Set(val *ApiActionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiActionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiActionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiActionDTO(val *ApiActionDTO) *NullableApiActionDTO {
	return &NullableApiActionDTO{value: val, isSet: true}
}

func (v NullableApiActionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiActionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


