/*
Rule Engine API

A robust rule engine microservice for IoT automation. Allows users to create and manage custom automation rules with Lua script execution in a secure sandboxed environment.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ruleengine

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCreateTriggerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCreateTriggerRequest{}

// ApiCreateTriggerRequest struct for ApiCreateTriggerRequest
type ApiCreateTriggerRequest struct {
	ConditionScript string `json:"condition_script"`
	Enabled *bool `json:"enabled,omitempty"`
	RuleId string `json:"rule_id"`
	Type string `json:"type"`
}

type _ApiCreateTriggerRequest ApiCreateTriggerRequest

// NewApiCreateTriggerRequest instantiates a new ApiCreateTriggerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCreateTriggerRequest(conditionScript string, ruleId string, type_ string) *ApiCreateTriggerRequest {
	this := ApiCreateTriggerRequest{}
	this.ConditionScript = conditionScript
	this.RuleId = ruleId
	this.Type = type_
	return &this
}

// NewApiCreateTriggerRequestWithDefaults instantiates a new ApiCreateTriggerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCreateTriggerRequestWithDefaults() *ApiCreateTriggerRequest {
	this := ApiCreateTriggerRequest{}
	return &this
}

// GetConditionScript returns the ConditionScript field value
func (o *ApiCreateTriggerRequest) GetConditionScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConditionScript
}

// GetConditionScriptOk returns a tuple with the ConditionScript field value
// and a boolean to check if the value has been set.
func (o *ApiCreateTriggerRequest) GetConditionScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConditionScript, true
}

// SetConditionScript sets field value
func (o *ApiCreateTriggerRequest) SetConditionScript(v string) {
	o.ConditionScript = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiCreateTriggerRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCreateTriggerRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiCreateTriggerRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiCreateTriggerRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRuleId returns the RuleId field value
func (o *ApiCreateTriggerRequest) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ApiCreateTriggerRequest) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ApiCreateTriggerRequest) SetRuleId(v string) {
	o.RuleId = v
}

// GetType returns the Type field value
func (o *ApiCreateTriggerRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiCreateTriggerRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiCreateTriggerRequest) SetType(v string) {
	o.Type = v
}

func (o ApiCreateTriggerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCreateTriggerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["condition_script"] = o.ConditionScript
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["rule_id"] = o.RuleId
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiCreateTriggerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"condition_script",
		"rule_id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCreateTriggerRequest := _ApiCreateTriggerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCreateTriggerRequest)

	if err != nil {
		return err
	}

	*o = ApiCreateTriggerRequest(varApiCreateTriggerRequest)

	return err
}

type NullableApiCreateTriggerRequest struct {
	value *ApiCreateTriggerRequest
	isSet bool
}

func (v NullableApiCreateTriggerRequest) Get() *ApiCreateTriggerRequest {
	return v.value
}

func (v *NullableApiCreateTriggerRequest) Set(val *ApiCreateTriggerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCreateTriggerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCreateTriggerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCreateTriggerRequest(val *ApiCreateTriggerRequest) *NullableApiCreateTriggerRequest {
	return &NullableApiCreateTriggerRequest{value: val, isSet: true}
}

func (v NullableApiCreateTriggerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCreateTriggerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


