/*
Rule Engine API

A robust rule engine microservice for IoT automation. Allows users to create and manage custom automation rules with Lua script execution in a secure sandboxed environment.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ruleengine

import (
	"encoding/json"
)

// checks if the AnalyticsDashboardData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsDashboardData{}

// AnalyticsDashboardData struct for AnalyticsDashboardData
type AnalyticsDashboardData struct {
	ExecutionTrend *AnalyticsTimeSeriesData `json:"execution_trend,omitempty"`
	LatencyTrend *AnalyticsTimeSeriesData `json:"latency_trend,omitempty"`
	OverallStats *AnalyticsExecutionStats `json:"overall_stats,omitempty"`
	RuleStats []AnalyticsRuleStats `json:"rule_stats,omitempty"`
	SuccessRateTrend *AnalyticsTimeSeriesData `json:"success_rate_trend,omitempty"`
	TimeRange *string `json:"time_range,omitempty"`
}

// NewAnalyticsDashboardData instantiates a new AnalyticsDashboardData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsDashboardData() *AnalyticsDashboardData {
	this := AnalyticsDashboardData{}
	return &this
}

// NewAnalyticsDashboardDataWithDefaults instantiates a new AnalyticsDashboardData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsDashboardDataWithDefaults() *AnalyticsDashboardData {
	this := AnalyticsDashboardData{}
	return &this
}

// GetExecutionTrend returns the ExecutionTrend field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetExecutionTrend() AnalyticsTimeSeriesData {
	if o == nil || IsNil(o.ExecutionTrend) {
		var ret AnalyticsTimeSeriesData
		return ret
	}
	return *o.ExecutionTrend
}

// GetExecutionTrendOk returns a tuple with the ExecutionTrend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetExecutionTrendOk() (*AnalyticsTimeSeriesData, bool) {
	if o == nil || IsNil(o.ExecutionTrend) {
		return nil, false
	}
	return o.ExecutionTrend, true
}

// HasExecutionTrend returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasExecutionTrend() bool {
	if o != nil && !IsNil(o.ExecutionTrend) {
		return true
	}

	return false
}

// SetExecutionTrend gets a reference to the given AnalyticsTimeSeriesData and assigns it to the ExecutionTrend field.
func (o *AnalyticsDashboardData) SetExecutionTrend(v AnalyticsTimeSeriesData) {
	o.ExecutionTrend = &v
}

// GetLatencyTrend returns the LatencyTrend field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetLatencyTrend() AnalyticsTimeSeriesData {
	if o == nil || IsNil(o.LatencyTrend) {
		var ret AnalyticsTimeSeriesData
		return ret
	}
	return *o.LatencyTrend
}

// GetLatencyTrendOk returns a tuple with the LatencyTrend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetLatencyTrendOk() (*AnalyticsTimeSeriesData, bool) {
	if o == nil || IsNil(o.LatencyTrend) {
		return nil, false
	}
	return o.LatencyTrend, true
}

// HasLatencyTrend returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasLatencyTrend() bool {
	if o != nil && !IsNil(o.LatencyTrend) {
		return true
	}

	return false
}

// SetLatencyTrend gets a reference to the given AnalyticsTimeSeriesData and assigns it to the LatencyTrend field.
func (o *AnalyticsDashboardData) SetLatencyTrend(v AnalyticsTimeSeriesData) {
	o.LatencyTrend = &v
}

// GetOverallStats returns the OverallStats field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetOverallStats() AnalyticsExecutionStats {
	if o == nil || IsNil(o.OverallStats) {
		var ret AnalyticsExecutionStats
		return ret
	}
	return *o.OverallStats
}

// GetOverallStatsOk returns a tuple with the OverallStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetOverallStatsOk() (*AnalyticsExecutionStats, bool) {
	if o == nil || IsNil(o.OverallStats) {
		return nil, false
	}
	return o.OverallStats, true
}

// HasOverallStats returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasOverallStats() bool {
	if o != nil && !IsNil(o.OverallStats) {
		return true
	}

	return false
}

// SetOverallStats gets a reference to the given AnalyticsExecutionStats and assigns it to the OverallStats field.
func (o *AnalyticsDashboardData) SetOverallStats(v AnalyticsExecutionStats) {
	o.OverallStats = &v
}

// GetRuleStats returns the RuleStats field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetRuleStats() []AnalyticsRuleStats {
	if o == nil || IsNil(o.RuleStats) {
		var ret []AnalyticsRuleStats
		return ret
	}
	return o.RuleStats
}

// GetRuleStatsOk returns a tuple with the RuleStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetRuleStatsOk() ([]AnalyticsRuleStats, bool) {
	if o == nil || IsNil(o.RuleStats) {
		return nil, false
	}
	return o.RuleStats, true
}

// HasRuleStats returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasRuleStats() bool {
	if o != nil && !IsNil(o.RuleStats) {
		return true
	}

	return false
}

// SetRuleStats gets a reference to the given []AnalyticsRuleStats and assigns it to the RuleStats field.
func (o *AnalyticsDashboardData) SetRuleStats(v []AnalyticsRuleStats) {
	o.RuleStats = v
}

// GetSuccessRateTrend returns the SuccessRateTrend field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetSuccessRateTrend() AnalyticsTimeSeriesData {
	if o == nil || IsNil(o.SuccessRateTrend) {
		var ret AnalyticsTimeSeriesData
		return ret
	}
	return *o.SuccessRateTrend
}

// GetSuccessRateTrendOk returns a tuple with the SuccessRateTrend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetSuccessRateTrendOk() (*AnalyticsTimeSeriesData, bool) {
	if o == nil || IsNil(o.SuccessRateTrend) {
		return nil, false
	}
	return o.SuccessRateTrend, true
}

// HasSuccessRateTrend returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasSuccessRateTrend() bool {
	if o != nil && !IsNil(o.SuccessRateTrend) {
		return true
	}

	return false
}

// SetSuccessRateTrend gets a reference to the given AnalyticsTimeSeriesData and assigns it to the SuccessRateTrend field.
func (o *AnalyticsDashboardData) SetSuccessRateTrend(v AnalyticsTimeSeriesData) {
	o.SuccessRateTrend = &v
}

// GetTimeRange returns the TimeRange field value if set, zero value otherwise.
func (o *AnalyticsDashboardData) GetTimeRange() string {
	if o == nil || IsNil(o.TimeRange) {
		var ret string
		return ret
	}
	return *o.TimeRange
}

// GetTimeRangeOk returns a tuple with the TimeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsDashboardData) GetTimeRangeOk() (*string, bool) {
	if o == nil || IsNil(o.TimeRange) {
		return nil, false
	}
	return o.TimeRange, true
}

// HasTimeRange returns a boolean if a field has been set.
func (o *AnalyticsDashboardData) HasTimeRange() bool {
	if o != nil && !IsNil(o.TimeRange) {
		return true
	}

	return false
}

// SetTimeRange gets a reference to the given string and assigns it to the TimeRange field.
func (o *AnalyticsDashboardData) SetTimeRange(v string) {
	o.TimeRange = &v
}

func (o AnalyticsDashboardData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsDashboardData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionTrend) {
		toSerialize["execution_trend"] = o.ExecutionTrend
	}
	if !IsNil(o.LatencyTrend) {
		toSerialize["latency_trend"] = o.LatencyTrend
	}
	if !IsNil(o.OverallStats) {
		toSerialize["overall_stats"] = o.OverallStats
	}
	if !IsNil(o.RuleStats) {
		toSerialize["rule_stats"] = o.RuleStats
	}
	if !IsNil(o.SuccessRateTrend) {
		toSerialize["success_rate_trend"] = o.SuccessRateTrend
	}
	if !IsNil(o.TimeRange) {
		toSerialize["time_range"] = o.TimeRange
	}
	return toSerialize, nil
}

type NullableAnalyticsDashboardData struct {
	value *AnalyticsDashboardData
	isSet bool
}

func (v NullableAnalyticsDashboardData) Get() *AnalyticsDashboardData {
	return v.value
}

func (v *NullableAnalyticsDashboardData) Set(val *AnalyticsDashboardData) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsDashboardData) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsDashboardData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsDashboardData(val *AnalyticsDashboardData) *NullableAnalyticsDashboardData {
	return &NullableAnalyticsDashboardData{value: val, isSet: true}
}

func (v NullableAnalyticsDashboardData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsDashboardData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


