/*
Rule Engine API

A robust rule engine microservice for IoT automation. Allows users to create and manage custom automation rules with Lua script execution in a secure sandboxed environment.

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ruleengine

import (
	"encoding/json"
)

// checks if the AnalyticsTimeSeriesPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsTimeSeriesPoint{}

// AnalyticsTimeSeriesPoint struct for AnalyticsTimeSeriesPoint
type AnalyticsTimeSeriesPoint struct {
	Timestamp *string `json:"timestamp,omitempty"`
	Value *float32 `json:"value,omitempty"`
}

// NewAnalyticsTimeSeriesPoint instantiates a new AnalyticsTimeSeriesPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsTimeSeriesPoint() *AnalyticsTimeSeriesPoint {
	this := AnalyticsTimeSeriesPoint{}
	return &this
}

// NewAnalyticsTimeSeriesPointWithDefaults instantiates a new AnalyticsTimeSeriesPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsTimeSeriesPointWithDefaults() *AnalyticsTimeSeriesPoint {
	this := AnalyticsTimeSeriesPoint{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AnalyticsTimeSeriesPoint) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsTimeSeriesPoint) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AnalyticsTimeSeriesPoint) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *AnalyticsTimeSeriesPoint) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AnalyticsTimeSeriesPoint) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsTimeSeriesPoint) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AnalyticsTimeSeriesPoint) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *AnalyticsTimeSeriesPoint) SetValue(v float32) {
	o.Value = &v
}

func (o AnalyticsTimeSeriesPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsTimeSeriesPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAnalyticsTimeSeriesPoint struct {
	value *AnalyticsTimeSeriesPoint
	isSet bool
}

func (v NullableAnalyticsTimeSeriesPoint) Get() *AnalyticsTimeSeriesPoint {
	return v.value
}

func (v *NullableAnalyticsTimeSeriesPoint) Set(val *AnalyticsTimeSeriesPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsTimeSeriesPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsTimeSeriesPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsTimeSeriesPoint(val *AnalyticsTimeSeriesPoint) *NullableAnalyticsTimeSeriesPoint {
	return &NullableAnalyticsTimeSeriesPoint{value: val, isSet: true}
}

func (v NullableAnalyticsTimeSeriesPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsTimeSeriesPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


